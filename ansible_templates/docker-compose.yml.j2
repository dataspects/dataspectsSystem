# [[ImplementsFeature::C1898799575]]
version: "3.7"
services:
  db:
    container_name: {{ systemPrefix }}-db
    image: {{ lookup('env','DI_MARIADB') }}
    environment:
      MYSQL_ROOT_PASSWORD: {{ mysql_root_password }}
    volumes:
      - {{ manual_docker_volumes_location }}mariadb_data:/var/lib/mysql/
      - {{ manual_docker_volumes_location }}mediawiki_root:/datadump/mediawiki_root/
{% if docker_network_mode == 'docker'%}
    networks:
      - {{ systemPrefix }}
{% else %}
    network_mode: host
    ports:
      - 3306:3306
{% endif %}
  {{ mediawikiDockerServiceName }}:
    container_name: {{ systemPrefix }}-{{ mediawikiDockerServiceName }}
    image: {{ lookup('env','DI_DATASPECTS_APACHE_MEDIAWIKI') }}
    volumes:
      - {{ manual_docker_volumes_location }}mediawiki_root:/var/www/html/
#      - {{ manual_docker_volumes_location }}mediawiki_conf:/etc/apache2/sites-available
    depends_on:
      - db
      - parsoid
{% if docker_network_mode == 'docker'%}
    networks:
      - {{ systemPrefix }}
{% else %}
    network_mode: host
{% endif %}
  proxy:
    container_name: {{ systemPrefix }}-proxy
    image: {{ lookup('env','DI_PROXY') }}
    ports:
      - {{ nginxPortOnHost }}:80
      - {{ nginxHttpsPortOnHost }}:443
    depends_on:
      - {{ mediawikiDockerServiceName }}
    volumes:
      - {{ manual_docker_volumes_location }}nginx_conf:/etc/nginx/conf.d
{% if docker_network_mode == 'docker'%}
    networks:
      - {{ systemPrefix }}
{% else %}
    network_mode: host
{% endif %}
  parsoid:
    container_name: {{ systemPrefix }}-parsoid
    image: {{ lookup('env','DI_PARSOID') }}
    environment:
      PARSOID_DOMAIN_{{ mediawikiDomainNameInHostFile }}: http://{% if docker_network_mode == 'host'%}127.0.0.1{% else %}{{ mediawikiDockerServiceName }}{% endif %}/w/api.php
{% if docker_network_mode == 'docker'%}
    networks:
      - {{ systemPrefix }}
{% else %}
    network_mode: host
{% endif %}
  elasticsearch:
    container_name: {{ systemPrefix }}-elasticsearch
    image: {{ lookup('env','DI_ELASTICSEARCH') }}
    environment:
      - "ES_JAVA_OPTS=-Xms1024m -Xmx2048m"
      - "discovery.type=single-node"
    volumes:
      - {{ manual_docker_volumes_location }}esdata:/usr/share/elasticsearch/data
    ports:
      - {{ elasticsearchPortOnHost }}:9200
{% if docker_network_mode == 'docker'%}
    networks:
      - {{ systemPrefix }}
{% else %}
    network_mode: host
{% endif %}
  kibana:
    container_name: {{ systemPrefix }}-kibana
    image: {{ lookup('env','DI_KIBANA') }}
    environment:
      - "ELASTICSEARCH_HOSTS=http://{% if docker_network_mode == 'host'%}127.0.0.1{% else %}elasticsearch{% endif %}:9200"
    depends_on:
      - elasticsearch
    ports:
      - {{ kibanaPortOnHost }}:5601
{% if docker_network_mode == 'docker'%}
    networks:
      - {{ systemPrefix }}
{% else %}
    network_mode: host
{% endif %}
  tika:
    container_name: {{ systemPrefix }}-tika
    image: {{ lookup('env','DI_TIKA') }}
    ports:
      - {{ tikaPortOnHost }}:9998
{% if docker_network_mode == 'docker'%}
    networks:
      - {{ systemPrefix }}
{% else %}
    network_mode: host
{% endif %}
  mongo:
    container_name: {{ systemPrefix }}-mongo
    image: {{ lookup('env','DI_MONGODB') }}
    ports:
      - {{ mongodbPortOnHost }}:27017
    volumes:
      - {{ manual_docker_volumes_location }}mongo_data:/data/db
{% if docker_network_mode == 'docker'%}
    networks:
      - {{ systemPrefix }}
{% else %}
    network_mode: host
{% endif %}
  redis:
    container_name: {{ systemPrefix }}-redis
    image: {{ lookup('env','DI_REDIS') }}
    ports:
      - {{ redisPortOnHost }}:6379
{% if docker_network_mode == 'docker'%}
    networks:
      - {{ systemPrefix }}
{% else %}
    network_mode: host
{% endif %}
  ui:
    container_name: {{ systemPrefix }}-ui
    image: {{ lookup('env','DI_DATASPECTS_UI') }}
    ports:
      - {{ dataspectsUIPort }}:3000
    depends_on:
      - mongo
      - redis
      - elasticsearch
{% if docker_network_mode == 'docker'%}
    networks:
      - {{ systemPrefix }}
{% else %}
    network_mode: host
{% endif %}
    environment:
      - "NODE_ENV={{ dataspectsUINodeEnv }}"
      - "REDIS_HOST={% if docker_network_mode == 'host'%}127.0.0.1{% else %}redis{% endif %}"
      - "REDIS_PORT=6379"
      - "SESSION_SECRET={{ dataspectsUISessionSecret }}"
      - "MONGODB_URI=mongodb://{% if docker_network_mode == 'host'%}127.0.0.1{% else %}mongo{% endif %}:27017/dataspects"
      - "SMTP_SERVER={{ dataspectsUISMTPServer }}"
      - "SMTP_USERNAME={{ dataspectsUISMTPUsername }}"
      - "SMTP_PASSWORD={{ dataspectsUISMTPPassword }}"
      - "FROM_EMAIL={{ dataspectsUIFromEmail }}"
      - "FROM_NAME={{ dataspectsUIFromName }}"
      - "SITE_URL={{ dataspectsUISiteURL }}"
      - "OTP_DOMAIN={{ dataspectsUIOTPDomain }}"
      - "API_KEY={{ dataspectsUIAPIKey }}"
      - "TIKA_URL={{ dataspectsUITikaURL }}"
      - "ES_NODE=http://{% if docker_network_mode == 'host'%}127.0.0.1{% else %}elasticsearch{% endif %}:9200"
      - "APM_SERVER_URL=http://{% if docker_network_mode == 'host'%}127.0.0.1{% else %}apm{% endif %}:8200"
      - "MEDIAWIKI_DATA_STORE_API_URL=http://mediawiki-datastore:3001"
      - "MEDIAWIKI_DATA_STORE_API_MASTER_KEY=123456789"
      - "REPOSITORY_DATA_STORE_API_URL=http://repository-datastore:3002"
      - "REPOSITORY_DATA_STORE_API_MASTER_KEY=123456789"
      - "DOCUMENT_DATA_STORE_API_URL=http://document-datastore:3002"
      - "DOCUMENT_DATA_STORE_API_MASTER_KEY=123456789"
  nats:
    container_name: {{ systemPrefix }}-nats
    image: {{ lookup('env','DI_NATS') }}
{% if docker_network_mode == 'docker'%}
    networks:
      - {{ systemPrefix }}
{% else %}
    network_mode: host
{% endif %}
  mediawiki-datastore:
    container_name: {{ systemPrefix }}-mediawiki-datastore
    image: {{ lookup('env','DI_DATASPECTS_MEDIAWIKI_DATASTORE') }}
    depends_on:
      - mongo
      - nats
{% if dataspectsUIHost == 'localhost'%}
    ports:
      - 3001:3001
{% else %}
    network_mode: host
{% endif %}
    environment:
      - "PORT=3001"
      - "NODE_ENV=development"
      - "NATS_URI=nats://{% if docker_network_mode == 'host'%}127.0.0.1{% else %}nats{% endif %}:4222"
      - "MONGODB_URI=mongodb://{% if docker_network_mode == 'host'%}127.0.0.1{% else %}mongo{% endif %}:27017/mediawikis"
      - "MASTER_API_KEY=123456789"
      - "API_KEY=987654321"
{% if docker_network_mode == 'docker'%}
    networks:
      - {{ systemPrefix }}
{% else %}
    network_mode: host
{% endif %}
  mediawiki-indexer:
    container_name: {{ systemPrefix }}-mediawiki-indexer
    image: {{ lookup('env','DI_DATASPECTS_MEDIAWIKI_INDEXER') }}
    depends_on:
      - nats
      - elasticsearch
      - tika
    environment:
      - "NATS_URI=nats://{% if docker_network_mode == 'host'%}127.0.0.1{% else %}nats{% endif %}:4222"
      - "ES_NODE=http://{% if docker_network_mode == 'host'%}127.0.0.1{% else %}elasticsearch{% endif %}:9200"
      - "ES_INDEX=general"
      - "TIKA_URL=http://tika:9998"
{% if docker_network_mode == 'docker'%}
    networks:
      - {{ systemPrefix }}
{% else %}
    network_mode: host
{% endif %}
  repository-datastore:
    container_name: {{ systemPrefix }}-repository-datastore
    image: {{ lookup('env','DI_DATASPECTS_REPOSITORY_DATASTORE') }}
    depends_on:
      - mongo
      - nats
{% if dataspectsUIHost == 'localhost'%}
    ports:
      - 3002:3002
{% else %}
    network_mode: host
{% endif %}
    environment:
      - "PORT=3002"
      - "NODE_ENV=development"
      - "NATS_URI=nats://{% if docker_network_mode == 'host'%}127.0.0.1{% else %}nats{% endif %}:4222"
      - "MONGODB_URI=mongodb://{% if docker_network_mode == 'host'%}127.0.0.1{% else %}mongo{% endif %}:27017/repositories"
      - "MASTER_API_KEY=123456789"
      - "API_KEY=987654321"
{% if docker_network_mode == 'docker'%}
    networks:
      - {{ systemPrefix }}
{% else %}
    network_mode: host
{% endif %}
  repository-indexer:
    container_name: {{ systemPrefix }}-repository-indexer
    image: {{ lookup('env','DI_DATASPECTS_REPOSITORY_INDEXER') }}
    depends_on:
      - nats
      - elasticsearch
      - tika
    environment:
      - "NATS_URI=nats://{% if docker_network_mode == 'host'%}127.0.0.1{% else %}nats{% endif %}:4222"
      - "ES_NODE=http://{% if docker_network_mode == 'host'%}127.0.0.1{% else %}elasticsearch{% endif %}:9200"
      - "ES_INDEX=general"
      - "TIKA_URL=http://tika:9998"
{% if docker_network_mode == 'docker'%}
    networks:
      - {{ systemPrefix }}
{% else %}
    network_mode: host
{% endif %}
  document-datastore:
    container_name: {{ systemPrefix }}-document-datastore
    image: {{ lookup('env','DI_DATASPECTS_DOCUMENT_DATASTORE') }}
    depends_on:
      - mongo
      - nats
{% if dataspectsUIHost == 'localhost'%}
    ports:
      - 3003:3003
{% else %}
    network_mode: host
{% endif %}
    environment:
      - "PORT=3003"
      - "NODE_ENV=development"
      - "NATS_URI=nats://{% if docker_network_mode == 'host'%}127.0.0.1{% else %}nats{% endif %}:4222"
      - "MONGODB_URI=mongodb://{% if docker_network_mode == 'host'%}127.0.0.1{% else %}mongo{% endif %}:27017/repositories"
      - "MASTER_API_KEY=123456789"
      - "API_KEY=987654321"
{% if docker_network_mode == 'docker'%}
    networks:
      - {{ systemPrefix }}
{% else %}
    network_mode: host
{% endif %}
  document-indexer:
    container_name: {{ systemPrefix }}-document-indexer
    image: {{ lookup('env','DI_DATASPECTS_DOCUMENT_INDEXER') }}
    depends_on:
      - nats
      - elasticsearch
      - tika
    environment:
      - "NATS_URI=nats://{% if docker_network_mode == 'host'%}127.0.0.1{% else %}nats{% endif %}:4222"
      - "ES_NODE=http://{% if docker_network_mode == 'host'%}127.0.0.1{% else %}elasticsearch{% endif %}:9200"
      - "ES_INDEX=general"
      - "TIKA_URL=http://tika:9998"
{% if docker_network_mode == 'docker'%}
    networks:
      - {{ systemPrefix }}
{% else %}
    network_mode: host
{% endif %}
{% if docker_network_mode == 'docker'%}
networks:
  dataspects:
    name: dataspects
    driver: bridge
{% else %}{% endif %}
{{ comment_out_volumes }}volumes:
{{ comment_out_volumes }}  mariadb_data:
{{ comment_out_volumes }}    driver: local
{{ comment_out_volumes }}  mediawiki_root:
{{ comment_out_volumes }}    driver: local
{{ comment_out_volumes }} # mediawiki_conf:
{{ comment_out_volumes }} #   driver: local
{{ comment_out_volumes }}  nginx_conf:
{{ comment_out_volumes }}    driver: local
{{ comment_out_volumes }}  mongo_data:
{{ comment_out_volumes }}    driver: local
{{ comment_out_volumes }}  esdata:
{{ comment_out_volumes }}    driver: local
