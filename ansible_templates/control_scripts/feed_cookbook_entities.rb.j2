require 'dataspects'
require 'awesome_print'

module Dataspects

  class CookbookFALnetFeeder < Feeder

    def initialize(dataspects_api_url:, dataspects_api_key:)
      super
    end

    def execute()
      # https://en.wikipedia.org/wiki/URL
      @mediawiki = ensure_it_exists(body: {
        "articleUrl": "https://cookbook.findandlearn.net/wiki/",
        "scriptUrl": "https://cookbook.findandlearn.net/w/",
        "namespace": "https://cookbook.findandlearn.net/wiki/",
        "feederClass": "#{`hostname`.strip}:#{Dir.pwd}/#{$0}",
        "timestamp": Time.now.getutc
      }.to_json)

      mw = Dataspects::MediaWiki.new(
        url: "https://cookbook.findandlearn.net/w",
        user: "roapi",
        password: "27i34w22f",
        log_in: :must_log_in
      )

      # ENTITIES
      # [[ProvidesCustomizationPossibilityFor::ResourceSilo level]]
      mw.originatedFromResourceSiloLabel = "DEMO::FindAndLearn::Cookbook"
      mw.originatedFromResourceSiloID = "cookbookfindandlearnnet"
      # Specify a facet of MediaWiki's resources and iterate through resources
      mw.resources_from_CATEGORIES(["Entity", "EntityType"]) do |re|
      # mw.resources_from_ASK_QUERY("[[C190110142823]]") do |re|
        # Iterate through a resource's entities
        re.entities.each do |entity|
          post(
            url: "http://localhost:3000/api/mediawikis/#{@mediawiki['_id']}/pages",
            body: entity.mongodoc.to_json
          )
          $logger.info("#{entity.hasEntityURL} fed...")
        end
      end

      # PROPERTIES
      mw.resources_from_NAMESPACE("Property") do |re|
        response = mw.oAPI.action(:ask,
          query: "[[Property:#{re.hasResourceName}]]|?Has type|?HasPredicateClass",
          token_type: false
        )
        response.data['query']['results'].each do |pagename, page_data|
          mongodoc = {
            "predicate": re.hasResourceName,
            "predicate_type": page_data['printouts']['Has type'][0],
            "predicate_class": page_data['printouts']['HasPredicateClass'][0],
            "predicate_namespace": page_data['fullurl'].chomp("Property:#{re.hasResourceName}")
          }
          post(
            url: "http://localhost:3000/api/predicates",
            body: mongodoc
          )
        end
      end
    end

  end
end

# Run by "ruby feed_cookbook_entities.rb"
$development_tika_url = "http://localhost:9998"
mwpsf = Dataspects::CookbookFALnetFeeder.new(
  dataspects_api_url: "http://localhost:3000/api/mediawikis",
  dataspects_api_key: "aslkdjasldkjlaskdj"
).execute
